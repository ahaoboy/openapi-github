/*
 * GitHub's official OpenAPI spec + Octokit extension
 *
 * OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs
 *
 * The version of the OpenAPI document: 16.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SecurityAdvisoryEcosystems : The package's language or package management ecosystem.
/// The package's language or package management ecosystem.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SecurityAdvisoryEcosystems {
    #[serde(rename = "rubygems")]
    Rubygems,
    #[serde(rename = "npm")]
    Npm,
    #[serde(rename = "pip")]
    Pip,
    #[serde(rename = "maven")]
    Maven,
    #[serde(rename = "nuget")]
    Nuget,
    #[serde(rename = "composer")]
    Composer,
    #[serde(rename = "go")]
    Go,
    #[serde(rename = "rust")]
    Rust,
    #[serde(rename = "erlang")]
    Erlang,
    #[serde(rename = "actions")]
    Actions,
    #[serde(rename = "pub")]
    Pub,
    #[serde(rename = "other")]
    Other,
    #[serde(rename = "swift")]
    Swift,

}

impl std::fmt::Display for SecurityAdvisoryEcosystems {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Rubygems => write!(f, "rubygems"),
            Self::Npm => write!(f, "npm"),
            Self::Pip => write!(f, "pip"),
            Self::Maven => write!(f, "maven"),
            Self::Nuget => write!(f, "nuget"),
            Self::Composer => write!(f, "composer"),
            Self::Go => write!(f, "go"),
            Self::Rust => write!(f, "rust"),
            Self::Erlang => write!(f, "erlang"),
            Self::Actions => write!(f, "actions"),
            Self::Pub => write!(f, "pub"),
            Self::Other => write!(f, "other"),
            Self::Swift => write!(f, "swift"),
        }
    }
}

impl Default for SecurityAdvisoryEcosystems {
    fn default() -> SecurityAdvisoryEcosystems {
        Self::Rubygems
    }
}

