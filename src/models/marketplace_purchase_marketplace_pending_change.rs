/*
 * GitHub's official OpenAPI spec + Octokit extension
 *
 * OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs
 *
 * The version of the OpenAPI document: 16.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MarketplacePurchaseMarketplacePendingChange {
    #[serde(rename = "is_installed", skip_serializing_if = "Option::is_none")]
    pub is_installed: Option<bool>,
    #[serde(rename = "effective_date", skip_serializing_if = "Option::is_none")]
    pub effective_date: Option<String>,
    #[serde(rename = "unit_count", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub unit_count: Option<Option<i32>>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "plan", skip_serializing_if = "Option::is_none")]
    pub plan: Option<Box<models::MarketplaceListingPlan>>,
}

impl MarketplacePurchaseMarketplacePendingChange {
    pub fn new() -> MarketplacePurchaseMarketplacePendingChange {
        MarketplacePurchaseMarketplacePendingChange {
            is_installed: None,
            effective_date: None,
            unit_count: None,
            id: None,
            plan: None,
        }
    }
}

