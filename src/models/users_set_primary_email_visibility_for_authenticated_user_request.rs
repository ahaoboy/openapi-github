/*
 * GitHub's official OpenAPI spec + Octokit extension
 *
 * OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs
 *
 * The version of the OpenAPI document: 16.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsersSetPrimaryEmailVisibilityForAuthenticatedUserRequest {
    /// Denotes whether an email is publicly visible.
    #[serde(rename = "visibility")]
    pub visibility: Visibility,
}

impl UsersSetPrimaryEmailVisibilityForAuthenticatedUserRequest {
    pub fn new(visibility: Visibility) -> UsersSetPrimaryEmailVisibilityForAuthenticatedUserRequest {
        UsersSetPrimaryEmailVisibilityForAuthenticatedUserRequest {
            visibility,
        }
    }
}
/// Denotes whether an email is publicly visible.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Visibility {
    #[serde(rename = "public")]
    Public,
    #[serde(rename = "private")]
    Private,
}

impl Default for Visibility {
    fn default() -> Visibility {
        Self::Public
    }
}

