/*
 * GitHub's official OpenAPI spec + Octokit extension
 *
 * OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs
 *
 * The version of the OpenAPI document: 16.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SecretScanningAlertResolutionWebhook : The reason for resolving the alert.
/// The reason for resolving the alert.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SecretScanningAlertResolutionWebhook {
    #[serde(rename = "false_positive")]
    FalsePositive,
    #[serde(rename = "wont_fix")]
    WontFix,
    #[serde(rename = "revoked")]
    Revoked,
    #[serde(rename = "used_in_tests")]
    UsedInTests,
    #[serde(rename = "pattern_deleted")]
    PatternDeleted,
    #[serde(rename = "pattern_edited")]
    PatternEdited,

}

impl std::fmt::Display for SecretScanningAlertResolutionWebhook {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::FalsePositive => write!(f, "false_positive"),
            Self::WontFix => write!(f, "wont_fix"),
            Self::Revoked => write!(f, "revoked"),
            Self::UsedInTests => write!(f, "used_in_tests"),
            Self::PatternDeleted => write!(f, "pattern_deleted"),
            Self::PatternEdited => write!(f, "pattern_edited"),
        }
    }
}

impl Default for SecretScanningAlertResolutionWebhook {
    fn default() -> SecretScanningAlertResolutionWebhook {
        Self::FalsePositive
    }
}

