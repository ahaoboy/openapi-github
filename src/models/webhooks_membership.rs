/*
 * GitHub's official OpenAPI spec + Octokit extension
 *
 * OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs
 *
 * The version of the OpenAPI document: 16.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WebhooksMembership : The membership between the user and the organization. Not present when the action is `member_invited`.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhooksMembership {
    #[serde(rename = "organization_url")]
    pub organization_url: String,
    #[serde(rename = "role")]
    pub role: String,
    #[serde(rename = "state")]
    pub state: String,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "user", deserialize_with = "Option::deserialize")]
    pub user: Option<Box<models::User>>,
}

impl WebhooksMembership {
    /// The membership between the user and the organization. Not present when the action is `member_invited`.
    pub fn new(organization_url: String, role: String, state: String, url: String, user: Option<models::User>) -> WebhooksMembership {
        WebhooksMembership {
            organization_url,
            role,
            state,
            url,
            user: if let Some(x) = user {Some(Box::new(x))} else {None},
        }
    }
}

