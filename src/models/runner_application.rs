/*
 * GitHub's official OpenAPI spec + Octokit extension
 *
 * OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs
 *
 * The version of the OpenAPI document: 16.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RunnerApplication : Runner Application
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RunnerApplication {
    #[serde(rename = "os")]
    pub os: String,
    #[serde(rename = "architecture")]
    pub architecture: String,
    #[serde(rename = "download_url")]
    pub download_url: String,
    #[serde(rename = "filename")]
    pub filename: String,
    /// A short lived bearer token used to download the runner, if needed.
    #[serde(rename = "temp_download_token", skip_serializing_if = "Option::is_none")]
    pub temp_download_token: Option<String>,
    #[serde(rename = "sha256_checksum", skip_serializing_if = "Option::is_none")]
    pub sha256_checksum: Option<String>,
}

impl RunnerApplication {
    /// Runner Application
    pub fn new(os: String, architecture: String, download_url: String, filename: String) -> RunnerApplication {
        RunnerApplication {
            os,
            architecture,
            download_url,
            filename,
            temp_download_token: None,
            sha256_checksum: None,
        }
    }
}

