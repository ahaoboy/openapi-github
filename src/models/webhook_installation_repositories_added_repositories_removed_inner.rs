/*
 * GitHub's official OpenAPI spec + Octokit extension
 *
 * OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs
 *
 * The version of the OpenAPI document: 16.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhookInstallationRepositoriesAddedRepositoriesRemovedInner {
    #[serde(rename = "full_name", skip_serializing_if = "Option::is_none")]
    pub full_name: Option<String>,
    /// Unique identifier of the repository
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// The name of the repository.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "node_id", skip_serializing_if = "Option::is_none")]
    pub node_id: Option<String>,
    /// Whether the repository is private or public.
    #[serde(rename = "private", skip_serializing_if = "Option::is_none")]
    pub private: Option<bool>,
}

impl WebhookInstallationRepositoriesAddedRepositoriesRemovedInner {
    pub fn new() -> WebhookInstallationRepositoriesAddedRepositoriesRemovedInner {
        WebhookInstallationRepositoriesAddedRepositoriesRemovedInner {
            full_name: None,
            id: None,
            name: None,
            node_id: None,
            private: None,
        }
    }
}

