/*
 * GitHub's official OpenAPI spec + Octokit extension
 *
 * OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs
 *
 * The version of the OpenAPI document: 16.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RepositoryPropertyAndRefName : Conditions to target repositories by property and refs by name
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepositoryPropertyAndRefName {
    #[serde(rename = "ref_name", skip_serializing_if = "Option::is_none")]
    pub ref_name: Option<Box<models::RepositoryRulesetConditionsRefName>>,
    #[serde(rename = "repository_property")]
    pub repository_property: Box<models::RepositoryRulesetConditionsRepositoryPropertyTargetRepositoryProperty>,
}

impl RepositoryPropertyAndRefName {
    /// Conditions to target repositories by property and refs by name
    pub fn new(repository_property: models::RepositoryRulesetConditionsRepositoryPropertyTargetRepositoryProperty) -> RepositoryPropertyAndRefName {
        RepositoryPropertyAndRefName {
            ref_name: None,
            repository_property: Box::new(repository_property),
        }
    }
}

