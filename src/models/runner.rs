/*
 * GitHub's official OpenAPI spec + Octokit extension
 *
 * OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs
 *
 * The version of the OpenAPI document: 16.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Runner : A self hosted runner
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Runner {
    /// The id of the runner.
    #[serde(rename = "id")]
    pub id: i32,
    /// The id of the runner group.
    #[serde(rename = "runner_group_id", skip_serializing_if = "Option::is_none")]
    pub runner_group_id: Option<i32>,
    /// The name of the runner.
    #[serde(rename = "name")]
    pub name: String,
    /// The Operating System of the runner.
    #[serde(rename = "os")]
    pub os: String,
    /// The status of the runner.
    #[serde(rename = "status")]
    pub status: String,
    #[serde(rename = "busy")]
    pub busy: bool,
    #[serde(rename = "labels")]
    pub labels: Vec<models::RunnerLabel>,
}

impl Runner {
    /// A self hosted runner
    pub fn new(id: i32, name: String, os: String, status: String, busy: bool, labels: Vec<models::RunnerLabel>) -> Runner {
        Runner {
            id,
            runner_group_id: None,
            name,
            os,
            status,
            busy,
            labels,
        }
    }
}

